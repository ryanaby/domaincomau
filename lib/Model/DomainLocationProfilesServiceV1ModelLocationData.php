<?php
/**
 * DomainLocationProfilesServiceV1ModelLocationData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: latest
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * DomainLocationProfilesServiceV1ModelLocationData Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DomainLocationProfilesServiceV1ModelLocationData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Domain.LocationProfilesService.v1.Model.LocationData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'studios_for_rent' => 'int',
        'terraced_houses_for_sale' => 'int',
        'semi_detached_houses_for_sale' => 'int',
        'townhouses_for_rent' => 'int',
        'apartments_and_units_for_sale' => 'int',
        'apartments_and_units_for_rent' => 'int',
        'villas_for_sale' => 'int',
        'duplexes_for_sale' => 'int',
        'semi_detached_houses_for_rent' => 'int',
        'studios_for_sale' => 'int',
        'single_percentage' => 'double',
        'most_common_age_bracket' => 'string',
        'renter_percentage' => 'double',
        'penthouses_for_sale' => 'int',
        'villas_for_rent' => 'int',
        'duplexes_for_rent' => 'int',
        'houses_for_sale' => 'int',
        'owner_occupier_percentage' => 'double',
        'property_categories' => '\Swagger\Client\Model\DomainLocationProfilesServiceV1ModelLocationDataPropertyCategories[]',
        'population' => 'double',
        'penthouses_for_rent' => 'int',
        'townhouses_for_sale' => 'int',
        'terraced_houses_for_rent' => 'int',
        'married_percentage' => 'double',
        'houses_for_rent' => 'int',
        'block_of_units_for_sale' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'studios_for_rent' => 'int32',
        'terraced_houses_for_sale' => 'int32',
        'semi_detached_houses_for_sale' => 'int32',
        'townhouses_for_rent' => 'int32',
        'apartments_and_units_for_sale' => 'int32',
        'apartments_and_units_for_rent' => 'int32',
        'villas_for_sale' => 'int32',
        'duplexes_for_sale' => 'int32',
        'semi_detached_houses_for_rent' => 'int32',
        'studios_for_sale' => 'int32',
        'single_percentage' => 'double',
        'most_common_age_bracket' => null,
        'renter_percentage' => 'double',
        'penthouses_for_sale' => 'int32',
        'villas_for_rent' => 'int32',
        'duplexes_for_rent' => 'int32',
        'houses_for_sale' => 'int32',
        'owner_occupier_percentage' => 'double',
        'property_categories' => null,
        'population' => 'double',
        'penthouses_for_rent' => 'int32',
        'townhouses_for_sale' => 'int32',
        'terraced_houses_for_rent' => 'int32',
        'married_percentage' => 'double',
        'houses_for_rent' => 'int32',
        'block_of_units_for_sale' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'studios_for_rent' => 'studiosForRent',
        'terraced_houses_for_sale' => 'terracedHousesForSale',
        'semi_detached_houses_for_sale' => 'semiDetachedHousesForSale',
        'townhouses_for_rent' => 'townhousesForRent',
        'apartments_and_units_for_sale' => 'apartmentsAndUnitsForSale',
        'apartments_and_units_for_rent' => 'apartmentsAndUnitsForRent',
        'villas_for_sale' => 'villasForSale',
        'duplexes_for_sale' => 'duplexesForSale',
        'semi_detached_houses_for_rent' => 'semiDetachedHousesForRent',
        'studios_for_sale' => 'studiosForSale',
        'single_percentage' => 'singlePercentage',
        'most_common_age_bracket' => 'mostCommonAgeBracket',
        'renter_percentage' => 'renterPercentage',
        'penthouses_for_sale' => 'penthousesForSale',
        'villas_for_rent' => 'villasForRent',
        'duplexes_for_rent' => 'duplexesForRent',
        'houses_for_sale' => 'housesForSale',
        'owner_occupier_percentage' => 'ownerOccupierPercentage',
        'property_categories' => 'propertyCategories',
        'population' => 'population',
        'penthouses_for_rent' => 'penthousesForRent',
        'townhouses_for_sale' => 'townhousesForSale',
        'terraced_houses_for_rent' => 'terracedHousesForRent',
        'married_percentage' => 'marriedPercentage',
        'houses_for_rent' => 'housesForRent',
        'block_of_units_for_sale' => 'blockOfUnitsForSale'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'studios_for_rent' => 'setStudiosForRent',
        'terraced_houses_for_sale' => 'setTerracedHousesForSale',
        'semi_detached_houses_for_sale' => 'setSemiDetachedHousesForSale',
        'townhouses_for_rent' => 'setTownhousesForRent',
        'apartments_and_units_for_sale' => 'setApartmentsAndUnitsForSale',
        'apartments_and_units_for_rent' => 'setApartmentsAndUnitsForRent',
        'villas_for_sale' => 'setVillasForSale',
        'duplexes_for_sale' => 'setDuplexesForSale',
        'semi_detached_houses_for_rent' => 'setSemiDetachedHousesForRent',
        'studios_for_sale' => 'setStudiosForSale',
        'single_percentage' => 'setSinglePercentage',
        'most_common_age_bracket' => 'setMostCommonAgeBracket',
        'renter_percentage' => 'setRenterPercentage',
        'penthouses_for_sale' => 'setPenthousesForSale',
        'villas_for_rent' => 'setVillasForRent',
        'duplexes_for_rent' => 'setDuplexesForRent',
        'houses_for_sale' => 'setHousesForSale',
        'owner_occupier_percentage' => 'setOwnerOccupierPercentage',
        'property_categories' => 'setPropertyCategories',
        'population' => 'setPopulation',
        'penthouses_for_rent' => 'setPenthousesForRent',
        'townhouses_for_sale' => 'setTownhousesForSale',
        'terraced_houses_for_rent' => 'setTerracedHousesForRent',
        'married_percentage' => 'setMarriedPercentage',
        'houses_for_rent' => 'setHousesForRent',
        'block_of_units_for_sale' => 'setBlockOfUnitsForSale'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'studios_for_rent' => 'getStudiosForRent',
        'terraced_houses_for_sale' => 'getTerracedHousesForSale',
        'semi_detached_houses_for_sale' => 'getSemiDetachedHousesForSale',
        'townhouses_for_rent' => 'getTownhousesForRent',
        'apartments_and_units_for_sale' => 'getApartmentsAndUnitsForSale',
        'apartments_and_units_for_rent' => 'getApartmentsAndUnitsForRent',
        'villas_for_sale' => 'getVillasForSale',
        'duplexes_for_sale' => 'getDuplexesForSale',
        'semi_detached_houses_for_rent' => 'getSemiDetachedHousesForRent',
        'studios_for_sale' => 'getStudiosForSale',
        'single_percentage' => 'getSinglePercentage',
        'most_common_age_bracket' => 'getMostCommonAgeBracket',
        'renter_percentage' => 'getRenterPercentage',
        'penthouses_for_sale' => 'getPenthousesForSale',
        'villas_for_rent' => 'getVillasForRent',
        'duplexes_for_rent' => 'getDuplexesForRent',
        'houses_for_sale' => 'getHousesForSale',
        'owner_occupier_percentage' => 'getOwnerOccupierPercentage',
        'property_categories' => 'getPropertyCategories',
        'population' => 'getPopulation',
        'penthouses_for_rent' => 'getPenthousesForRent',
        'townhouses_for_sale' => 'getTownhousesForSale',
        'terraced_houses_for_rent' => 'getTerracedHousesForRent',
        'married_percentage' => 'getMarriedPercentage',
        'houses_for_rent' => 'getHousesForRent',
        'block_of_units_for_sale' => 'getBlockOfUnitsForSale'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['studios_for_rent'] = isset($data['studios_for_rent']) ? $data['studios_for_rent'] : null;
        $this->container['terraced_houses_for_sale'] = isset($data['terraced_houses_for_sale']) ? $data['terraced_houses_for_sale'] : null;
        $this->container['semi_detached_houses_for_sale'] = isset($data['semi_detached_houses_for_sale']) ? $data['semi_detached_houses_for_sale'] : null;
        $this->container['townhouses_for_rent'] = isset($data['townhouses_for_rent']) ? $data['townhouses_for_rent'] : null;
        $this->container['apartments_and_units_for_sale'] = isset($data['apartments_and_units_for_sale']) ? $data['apartments_and_units_for_sale'] : null;
        $this->container['apartments_and_units_for_rent'] = isset($data['apartments_and_units_for_rent']) ? $data['apartments_and_units_for_rent'] : null;
        $this->container['villas_for_sale'] = isset($data['villas_for_sale']) ? $data['villas_for_sale'] : null;
        $this->container['duplexes_for_sale'] = isset($data['duplexes_for_sale']) ? $data['duplexes_for_sale'] : null;
        $this->container['semi_detached_houses_for_rent'] = isset($data['semi_detached_houses_for_rent']) ? $data['semi_detached_houses_for_rent'] : null;
        $this->container['studios_for_sale'] = isset($data['studios_for_sale']) ? $data['studios_for_sale'] : null;
        $this->container['single_percentage'] = isset($data['single_percentage']) ? $data['single_percentage'] : null;
        $this->container['most_common_age_bracket'] = isset($data['most_common_age_bracket']) ? $data['most_common_age_bracket'] : null;
        $this->container['renter_percentage'] = isset($data['renter_percentage']) ? $data['renter_percentage'] : null;
        $this->container['penthouses_for_sale'] = isset($data['penthouses_for_sale']) ? $data['penthouses_for_sale'] : null;
        $this->container['villas_for_rent'] = isset($data['villas_for_rent']) ? $data['villas_for_rent'] : null;
        $this->container['duplexes_for_rent'] = isset($data['duplexes_for_rent']) ? $data['duplexes_for_rent'] : null;
        $this->container['houses_for_sale'] = isset($data['houses_for_sale']) ? $data['houses_for_sale'] : null;
        $this->container['owner_occupier_percentage'] = isset($data['owner_occupier_percentage']) ? $data['owner_occupier_percentage'] : null;
        $this->container['property_categories'] = isset($data['property_categories']) ? $data['property_categories'] : null;
        $this->container['population'] = isset($data['population']) ? $data['population'] : null;
        $this->container['penthouses_for_rent'] = isset($data['penthouses_for_rent']) ? $data['penthouses_for_rent'] : null;
        $this->container['townhouses_for_sale'] = isset($data['townhouses_for_sale']) ? $data['townhouses_for_sale'] : null;
        $this->container['terraced_houses_for_rent'] = isset($data['terraced_houses_for_rent']) ? $data['terraced_houses_for_rent'] : null;
        $this->container['married_percentage'] = isset($data['married_percentage']) ? $data['married_percentage'] : null;
        $this->container['houses_for_rent'] = isset($data['houses_for_rent']) ? $data['houses_for_rent'] : null;
        $this->container['block_of_units_for_sale'] = isset($data['block_of_units_for_sale']) ? $data['block_of_units_for_sale'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets studios_for_rent
     *
     * @return int
     */
    public function getStudiosForRent()
    {
        return $this->container['studios_for_rent'];
    }

    /**
     * Sets studios_for_rent
     *
     * @param int $studios_for_rent studios_for_rent
     *
     * @return $this
     */
    public function setStudiosForRent($studios_for_rent)
    {
        $this->container['studios_for_rent'] = $studios_for_rent;

        return $this;
    }

    /**
     * Gets terraced_houses_for_sale
     *
     * @return int
     */
    public function getTerracedHousesForSale()
    {
        return $this->container['terraced_houses_for_sale'];
    }

    /**
     * Sets terraced_houses_for_sale
     *
     * @param int $terraced_houses_for_sale terraced_houses_for_sale
     *
     * @return $this
     */
    public function setTerracedHousesForSale($terraced_houses_for_sale)
    {
        $this->container['terraced_houses_for_sale'] = $terraced_houses_for_sale;

        return $this;
    }

    /**
     * Gets semi_detached_houses_for_sale
     *
     * @return int
     */
    public function getSemiDetachedHousesForSale()
    {
        return $this->container['semi_detached_houses_for_sale'];
    }

    /**
     * Sets semi_detached_houses_for_sale
     *
     * @param int $semi_detached_houses_for_sale semi_detached_houses_for_sale
     *
     * @return $this
     */
    public function setSemiDetachedHousesForSale($semi_detached_houses_for_sale)
    {
        $this->container['semi_detached_houses_for_sale'] = $semi_detached_houses_for_sale;

        return $this;
    }

    /**
     * Gets townhouses_for_rent
     *
     * @return int
     */
    public function getTownhousesForRent()
    {
        return $this->container['townhouses_for_rent'];
    }

    /**
     * Sets townhouses_for_rent
     *
     * @param int $townhouses_for_rent townhouses_for_rent
     *
     * @return $this
     */
    public function setTownhousesForRent($townhouses_for_rent)
    {
        $this->container['townhouses_for_rent'] = $townhouses_for_rent;

        return $this;
    }

    /**
     * Gets apartments_and_units_for_sale
     *
     * @return int
     */
    public function getApartmentsAndUnitsForSale()
    {
        return $this->container['apartments_and_units_for_sale'];
    }

    /**
     * Sets apartments_and_units_for_sale
     *
     * @param int $apartments_and_units_for_sale apartments_and_units_for_sale
     *
     * @return $this
     */
    public function setApartmentsAndUnitsForSale($apartments_and_units_for_sale)
    {
        $this->container['apartments_and_units_for_sale'] = $apartments_and_units_for_sale;

        return $this;
    }

    /**
     * Gets apartments_and_units_for_rent
     *
     * @return int
     */
    public function getApartmentsAndUnitsForRent()
    {
        return $this->container['apartments_and_units_for_rent'];
    }

    /**
     * Sets apartments_and_units_for_rent
     *
     * @param int $apartments_and_units_for_rent apartments_and_units_for_rent
     *
     * @return $this
     */
    public function setApartmentsAndUnitsForRent($apartments_and_units_for_rent)
    {
        $this->container['apartments_and_units_for_rent'] = $apartments_and_units_for_rent;

        return $this;
    }

    /**
     * Gets villas_for_sale
     *
     * @return int
     */
    public function getVillasForSale()
    {
        return $this->container['villas_for_sale'];
    }

    /**
     * Sets villas_for_sale
     *
     * @param int $villas_for_sale villas_for_sale
     *
     * @return $this
     */
    public function setVillasForSale($villas_for_sale)
    {
        $this->container['villas_for_sale'] = $villas_for_sale;

        return $this;
    }

    /**
     * Gets duplexes_for_sale
     *
     * @return int
     */
    public function getDuplexesForSale()
    {
        return $this->container['duplexes_for_sale'];
    }

    /**
     * Sets duplexes_for_sale
     *
     * @param int $duplexes_for_sale duplexes_for_sale
     *
     * @return $this
     */
    public function setDuplexesForSale($duplexes_for_sale)
    {
        $this->container['duplexes_for_sale'] = $duplexes_for_sale;

        return $this;
    }

    /**
     * Gets semi_detached_houses_for_rent
     *
     * @return int
     */
    public function getSemiDetachedHousesForRent()
    {
        return $this->container['semi_detached_houses_for_rent'];
    }

    /**
     * Sets semi_detached_houses_for_rent
     *
     * @param int $semi_detached_houses_for_rent semi_detached_houses_for_rent
     *
     * @return $this
     */
    public function setSemiDetachedHousesForRent($semi_detached_houses_for_rent)
    {
        $this->container['semi_detached_houses_for_rent'] = $semi_detached_houses_for_rent;

        return $this;
    }

    /**
     * Gets studios_for_sale
     *
     * @return int
     */
    public function getStudiosForSale()
    {
        return $this->container['studios_for_sale'];
    }

    /**
     * Sets studios_for_sale
     *
     * @param int $studios_for_sale studios_for_sale
     *
     * @return $this
     */
    public function setStudiosForSale($studios_for_sale)
    {
        $this->container['studios_for_sale'] = $studios_for_sale;

        return $this;
    }

    /**
     * Gets single_percentage
     *
     * @return double
     */
    public function getSinglePercentage()
    {
        return $this->container['single_percentage'];
    }

    /**
     * Sets single_percentage
     *
     * @param double $single_percentage single_percentage
     *
     * @return $this
     */
    public function setSinglePercentage($single_percentage)
    {
        $this->container['single_percentage'] = $single_percentage;

        return $this;
    }

    /**
     * Gets most_common_age_bracket
     *
     * @return string
     */
    public function getMostCommonAgeBracket()
    {
        return $this->container['most_common_age_bracket'];
    }

    /**
     * Sets most_common_age_bracket
     *
     * @param string $most_common_age_bracket most_common_age_bracket
     *
     * @return $this
     */
    public function setMostCommonAgeBracket($most_common_age_bracket)
    {
        $this->container['most_common_age_bracket'] = $most_common_age_bracket;

        return $this;
    }

    /**
     * Gets renter_percentage
     *
     * @return double
     */
    public function getRenterPercentage()
    {
        return $this->container['renter_percentage'];
    }

    /**
     * Sets renter_percentage
     *
     * @param double $renter_percentage renter_percentage
     *
     * @return $this
     */
    public function setRenterPercentage($renter_percentage)
    {
        $this->container['renter_percentage'] = $renter_percentage;

        return $this;
    }

    /**
     * Gets penthouses_for_sale
     *
     * @return int
     */
    public function getPenthousesForSale()
    {
        return $this->container['penthouses_for_sale'];
    }

    /**
     * Sets penthouses_for_sale
     *
     * @param int $penthouses_for_sale penthouses_for_sale
     *
     * @return $this
     */
    public function setPenthousesForSale($penthouses_for_sale)
    {
        $this->container['penthouses_for_sale'] = $penthouses_for_sale;

        return $this;
    }

    /**
     * Gets villas_for_rent
     *
     * @return int
     */
    public function getVillasForRent()
    {
        return $this->container['villas_for_rent'];
    }

    /**
     * Sets villas_for_rent
     *
     * @param int $villas_for_rent villas_for_rent
     *
     * @return $this
     */
    public function setVillasForRent($villas_for_rent)
    {
        $this->container['villas_for_rent'] = $villas_for_rent;

        return $this;
    }

    /**
     * Gets duplexes_for_rent
     *
     * @return int
     */
    public function getDuplexesForRent()
    {
        return $this->container['duplexes_for_rent'];
    }

    /**
     * Sets duplexes_for_rent
     *
     * @param int $duplexes_for_rent duplexes_for_rent
     *
     * @return $this
     */
    public function setDuplexesForRent($duplexes_for_rent)
    {
        $this->container['duplexes_for_rent'] = $duplexes_for_rent;

        return $this;
    }

    /**
     * Gets houses_for_sale
     *
     * @return int
     */
    public function getHousesForSale()
    {
        return $this->container['houses_for_sale'];
    }

    /**
     * Sets houses_for_sale
     *
     * @param int $houses_for_sale houses_for_sale
     *
     * @return $this
     */
    public function setHousesForSale($houses_for_sale)
    {
        $this->container['houses_for_sale'] = $houses_for_sale;

        return $this;
    }

    /**
     * Gets owner_occupier_percentage
     *
     * @return double
     */
    public function getOwnerOccupierPercentage()
    {
        return $this->container['owner_occupier_percentage'];
    }

    /**
     * Sets owner_occupier_percentage
     *
     * @param double $owner_occupier_percentage owner_occupier_percentage
     *
     * @return $this
     */
    public function setOwnerOccupierPercentage($owner_occupier_percentage)
    {
        $this->container['owner_occupier_percentage'] = $owner_occupier_percentage;

        return $this;
    }

    /**
     * Gets property_categories
     *
     * @return \Swagger\Client\Model\DomainLocationProfilesServiceV1ModelLocationDataPropertyCategories[]
     */
    public function getPropertyCategories()
    {
        return $this->container['property_categories'];
    }

    /**
     * Sets property_categories
     *
     * @param \Swagger\Client\Model\DomainLocationProfilesServiceV1ModelLocationDataPropertyCategories[] $property_categories property_categories
     *
     * @return $this
     */
    public function setPropertyCategories($property_categories)
    {
        $this->container['property_categories'] = $property_categories;

        return $this;
    }

    /**
     * Gets population
     *
     * @return double
     */
    public function getPopulation()
    {
        return $this->container['population'];
    }

    /**
     * Sets population
     *
     * @param double $population population
     *
     * @return $this
     */
    public function setPopulation($population)
    {
        $this->container['population'] = $population;

        return $this;
    }

    /**
     * Gets penthouses_for_rent
     *
     * @return int
     */
    public function getPenthousesForRent()
    {
        return $this->container['penthouses_for_rent'];
    }

    /**
     * Sets penthouses_for_rent
     *
     * @param int $penthouses_for_rent penthouses_for_rent
     *
     * @return $this
     */
    public function setPenthousesForRent($penthouses_for_rent)
    {
        $this->container['penthouses_for_rent'] = $penthouses_for_rent;

        return $this;
    }

    /**
     * Gets townhouses_for_sale
     *
     * @return int
     */
    public function getTownhousesForSale()
    {
        return $this->container['townhouses_for_sale'];
    }

    /**
     * Sets townhouses_for_sale
     *
     * @param int $townhouses_for_sale townhouses_for_sale
     *
     * @return $this
     */
    public function setTownhousesForSale($townhouses_for_sale)
    {
        $this->container['townhouses_for_sale'] = $townhouses_for_sale;

        return $this;
    }

    /**
     * Gets terraced_houses_for_rent
     *
     * @return int
     */
    public function getTerracedHousesForRent()
    {
        return $this->container['terraced_houses_for_rent'];
    }

    /**
     * Sets terraced_houses_for_rent
     *
     * @param int $terraced_houses_for_rent terraced_houses_for_rent
     *
     * @return $this
     */
    public function setTerracedHousesForRent($terraced_houses_for_rent)
    {
        $this->container['terraced_houses_for_rent'] = $terraced_houses_for_rent;

        return $this;
    }

    /**
     * Gets married_percentage
     *
     * @return double
     */
    public function getMarriedPercentage()
    {
        return $this->container['married_percentage'];
    }

    /**
     * Sets married_percentage
     *
     * @param double $married_percentage married_percentage
     *
     * @return $this
     */
    public function setMarriedPercentage($married_percentage)
    {
        $this->container['married_percentage'] = $married_percentage;

        return $this;
    }

    /**
     * Gets houses_for_rent
     *
     * @return int
     */
    public function getHousesForRent()
    {
        return $this->container['houses_for_rent'];
    }

    /**
     * Sets houses_for_rent
     *
     * @param int $houses_for_rent houses_for_rent
     *
     * @return $this
     */
    public function setHousesForRent($houses_for_rent)
    {
        $this->container['houses_for_rent'] = $houses_for_rent;

        return $this;
    }

    /**
     * Gets block_of_units_for_sale
     *
     * @return int
     */
    public function getBlockOfUnitsForSale()
    {
        return $this->container['block_of_units_for_sale'];
    }

    /**
     * Sets block_of_units_for_sale
     *
     * @param int $block_of_units_for_sale block_of_units_for_sale
     *
     * @return $this
     */
    public function setBlockOfUnitsForSale($block_of_units_for_sale)
    {
        $this->container['block_of_units_for_sale'] = $block_of_units_for_sale;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
