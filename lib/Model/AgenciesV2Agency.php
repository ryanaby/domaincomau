<?php
/**
 * AgenciesV2Agency
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: latest
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AgenciesV2Agency Class Doc Comment
 *
 * @category Class
 * @description Agency
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AgenciesV2Agency implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Agencies.V2.Agency';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_type' => 'string',
        'profile' => '\Swagger\Client\Model\AgenciesV2AgencyProfile',
        'date_updated' => '\DateTime',
        'name' => 'string',
        'details' => '\Swagger\Client\Model\AgenciesV2AgencyDetails',
        'id' => 'int',
        'cre_id' => 'int',
        'agents' => '\Swagger\Client\Model\AgenciesV2ContactInAgencyList[]',
        'contact_details' => '\Swagger\Client\Model\AgenciesV2AgencyContactDetails',
        'homepass_enabled' => 'bool',
        'suburbs_served' => 'string',
        'subscribed_to_agency_performance_report' => 'bool',
        'agency_options' => '\Swagger\Client\Model\AgenciesV2AgencyOptions',
        'welcome_message' => 'string',
        'ad_format' => 'string',
        'provider_agency_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_type' => null,
        'profile' => null,
        'date_updated' => 'date-time',
        'name' => null,
        'details' => null,
        'id' => 'int32',
        'cre_id' => 'int32',
        'agents' => null,
        'contact_details' => null,
        'homepass_enabled' => null,
        'suburbs_served' => null,
        'subscribed_to_agency_performance_report' => null,
        'agency_options' => null,
        'welcome_message' => null,
        'ad_format' => null,
        'provider_agency_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_type' => 'accountType',
        'profile' => 'profile',
        'date_updated' => 'dateUpdated',
        'name' => 'name',
        'details' => 'details',
        'id' => 'id',
        'cre_id' => 'creId',
        'agents' => 'agents',
        'contact_details' => 'contactDetails',
        'homepass_enabled' => 'homepassEnabled',
        'suburbs_served' => 'suburbsServed',
        'subscribed_to_agency_performance_report' => 'subscribedToAgencyPerformanceReport',
        'agency_options' => 'agencyOptions',
        'welcome_message' => 'welcomeMessage',
        'ad_format' => 'adFormat',
        'provider_agency_id' => 'providerAgencyId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_type' => 'setAccountType',
        'profile' => 'setProfile',
        'date_updated' => 'setDateUpdated',
        'name' => 'setName',
        'details' => 'setDetails',
        'id' => 'setId',
        'cre_id' => 'setCreId',
        'agents' => 'setAgents',
        'contact_details' => 'setContactDetails',
        'homepass_enabled' => 'setHomepassEnabled',
        'suburbs_served' => 'setSuburbsServed',
        'subscribed_to_agency_performance_report' => 'setSubscribedToAgencyPerformanceReport',
        'agency_options' => 'setAgencyOptions',
        'welcome_message' => 'setWelcomeMessage',
        'ad_format' => 'setAdFormat',
        'provider_agency_id' => 'setProviderAgencyId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_type' => 'getAccountType',
        'profile' => 'getProfile',
        'date_updated' => 'getDateUpdated',
        'name' => 'getName',
        'details' => 'getDetails',
        'id' => 'getId',
        'cre_id' => 'getCreId',
        'agents' => 'getAgents',
        'contact_details' => 'getContactDetails',
        'homepass_enabled' => 'getHomepassEnabled',
        'suburbs_served' => 'getSuburbsServed',
        'subscribed_to_agency_performance_report' => 'getSubscribedToAgencyPerformanceReport',
        'agency_options' => 'getAgencyOptions',
        'welcome_message' => 'getWelcomeMessage',
        'ad_format' => 'getAdFormat',
        'provider_agency_id' => 'getProviderAgencyId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const ACCOUNT_TYPE_NONE = 'none';
    const ACCOUNT_TYPE_RESIDENTIAL = 'residential';
    const ACCOUNT_TYPE_COMMERCIAL_LIGHT = 'commercialLight';
    const ACCOUNT_TYPE_COMMERCIAL_FULL = 'commercialFull';
    const ACCOUNT_TYPE_DEVELOPER = 'developer';
    const ACCOUNT_TYPE_HOLIDAY = 'holiday';
    const ACCOUNT_TYPE_BUSINESS = 'business';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAccountTypeAllowableValues()
    {
        return [
            self::ACCOUNT_TYPE_NONE,
            self::ACCOUNT_TYPE_RESIDENTIAL,
            self::ACCOUNT_TYPE_COMMERCIAL_LIGHT,
            self::ACCOUNT_TYPE_COMMERCIAL_FULL,
            self::ACCOUNT_TYPE_DEVELOPER,
            self::ACCOUNT_TYPE_HOLIDAY,
            self::ACCOUNT_TYPE_BUSINESS,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_type'] = isset($data['account_type']) ? $data['account_type'] : null;
        $this->container['profile'] = isset($data['profile']) ? $data['profile'] : null;
        $this->container['date_updated'] = isset($data['date_updated']) ? $data['date_updated'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['cre_id'] = isset($data['cre_id']) ? $data['cre_id'] : null;
        $this->container['agents'] = isset($data['agents']) ? $data['agents'] : null;
        $this->container['contact_details'] = isset($data['contact_details']) ? $data['contact_details'] : null;
        $this->container['homepass_enabled'] = isset($data['homepass_enabled']) ? $data['homepass_enabled'] : null;
        $this->container['suburbs_served'] = isset($data['suburbs_served']) ? $data['suburbs_served'] : null;
        $this->container['subscribed_to_agency_performance_report'] = isset($data['subscribed_to_agency_performance_report']) ? $data['subscribed_to_agency_performance_report'] : null;
        $this->container['agency_options'] = isset($data['agency_options']) ? $data['agency_options'] : null;
        $this->container['welcome_message'] = isset($data['welcome_message']) ? $data['welcome_message'] : null;
        $this->container['ad_format'] = isset($data['ad_format']) ? $data['ad_format'] : null;
        $this->container['provider_agency_id'] = isset($data['provider_agency_id']) ? $data['provider_agency_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getAccountTypeAllowableValues();
        if (!is_null($this->container['account_type']) && !in_array($this->container['account_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'account_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_type
     *
     * @return string
     */
    public function getAccountType()
    {
        return $this->container['account_type'];
    }

    /**
     * Sets account_type
     *
     * @param string $account_type Gets or Sets AccountType
     *
     * @return $this
     */
    public function setAccountType($account_type)
    {
        $allowedValues = $this->getAccountTypeAllowableValues();
        if (!is_null($account_type) && !in_array($account_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'account_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['account_type'] = $account_type;

        return $this;
    }

    /**
     * Gets profile
     *
     * @return \Swagger\Client\Model\AgenciesV2AgencyProfile
     */
    public function getProfile()
    {
        return $this->container['profile'];
    }

    /**
     * Sets profile
     *
     * @param \Swagger\Client\Model\AgenciesV2AgencyProfile $profile profile
     *
     * @return $this
     */
    public function setProfile($profile)
    {
        $this->container['profile'] = $profile;

        return $this;
    }

    /**
     * Gets date_updated
     *
     * @return \DateTime
     */
    public function getDateUpdated()
    {
        return $this->container['date_updated'];
    }

    /**
     * Sets date_updated
     *
     * @param \DateTime $date_updated Gets or Sets DateUpdated
     *
     * @return $this
     */
    public function setDateUpdated($date_updated)
    {
        $this->container['date_updated'] = $date_updated;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Gets or Sets Name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets details
     *
     * @return \Swagger\Client\Model\AgenciesV2AgencyDetails
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param \Swagger\Client\Model\AgenciesV2AgencyDetails $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id Gets or Sets Id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets cre_id
     *
     * @return int
     */
    public function getCreId()
    {
        return $this->container['cre_id'];
    }

    /**
     * Sets cre_id
     *
     * @param int $cre_id Gets or Sets CreId
     *
     * @return $this
     */
    public function setCreId($cre_id)
    {
        $this->container['cre_id'] = $cre_id;

        return $this;
    }

    /**
     * Gets agents
     *
     * @return \Swagger\Client\Model\AgenciesV2ContactInAgencyList[]
     */
    public function getAgents()
    {
        return $this->container['agents'];
    }

    /**
     * Sets agents
     *
     * @param \Swagger\Client\Model\AgenciesV2ContactInAgencyList[] $agents Gets or Sets Agents
     *
     * @return $this
     */
    public function setAgents($agents)
    {
        $this->container['agents'] = $agents;

        return $this;
    }

    /**
     * Gets contact_details
     *
     * @return \Swagger\Client\Model\AgenciesV2AgencyContactDetails
     */
    public function getContactDetails()
    {
        return $this->container['contact_details'];
    }

    /**
     * Sets contact_details
     *
     * @param \Swagger\Client\Model\AgenciesV2AgencyContactDetails $contact_details contact_details
     *
     * @return $this
     */
    public function setContactDetails($contact_details)
    {
        $this->container['contact_details'] = $contact_details;

        return $this;
    }

    /**
     * Gets homepass_enabled
     *
     * @return bool
     */
    public function getHomepassEnabled()
    {
        return $this->container['homepass_enabled'];
    }

    /**
     * Sets homepass_enabled
     *
     * @param bool $homepass_enabled Gets or Sets HomepassEnabled
     *
     * @return $this
     */
    public function setHomepassEnabled($homepass_enabled)
    {
        $this->container['homepass_enabled'] = $homepass_enabled;

        return $this;
    }

    /**
     * Gets suburbs_served
     *
     * @return string
     */
    public function getSuburbsServed()
    {
        return $this->container['suburbs_served'];
    }

    /**
     * Sets suburbs_served
     *
     * @param string $suburbs_served Gets or Sets SuburbsServed
     *
     * @return $this
     */
    public function setSuburbsServed($suburbs_served)
    {
        $this->container['suburbs_served'] = $suburbs_served;

        return $this;
    }

    /**
     * Gets subscribed_to_agency_performance_report
     *
     * @return bool
     */
    public function getSubscribedToAgencyPerformanceReport()
    {
        return $this->container['subscribed_to_agency_performance_report'];
    }

    /**
     * Sets subscribed_to_agency_performance_report
     *
     * @param bool $subscribed_to_agency_performance_report Gets or Sets SubscribedToAgencyPerformanceReport
     *
     * @return $this
     */
    public function setSubscribedToAgencyPerformanceReport($subscribed_to_agency_performance_report)
    {
        $this->container['subscribed_to_agency_performance_report'] = $subscribed_to_agency_performance_report;

        return $this;
    }

    /**
     * Gets agency_options
     *
     * @return \Swagger\Client\Model\AgenciesV2AgencyOptions
     */
    public function getAgencyOptions()
    {
        return $this->container['agency_options'];
    }

    /**
     * Sets agency_options
     *
     * @param \Swagger\Client\Model\AgenciesV2AgencyOptions $agency_options agency_options
     *
     * @return $this
     */
    public function setAgencyOptions($agency_options)
    {
        $this->container['agency_options'] = $agency_options;

        return $this;
    }

    /**
     * Gets welcome_message
     *
     * @return string
     */
    public function getWelcomeMessage()
    {
        return $this->container['welcome_message'];
    }

    /**
     * Sets welcome_message
     *
     * @param string $welcome_message Gets or Sets WelcomeMessage
     *
     * @return $this
     */
    public function setWelcomeMessage($welcome_message)
    {
        $this->container['welcome_message'] = $welcome_message;

        return $this;
    }

    /**
     * Gets ad_format
     *
     * @return string
     */
    public function getAdFormat()
    {
        return $this->container['ad_format'];
    }

    /**
     * Sets ad_format
     *
     * @param string $ad_format Gets or Sets AdFormat
     *
     * @return $this
     */
    public function setAdFormat($ad_format)
    {
        $this->container['ad_format'] = $ad_format;

        return $this;
    }

    /**
     * Gets provider_agency_id
     *
     * @return string
     */
    public function getProviderAgencyId()
    {
        return $this->container['provider_agency_id'];
    }

    /**
     * Sets provider_agency_id
     *
     * @param string $provider_agency_id Gets or Sets ProviderAgencyId
     *
     * @return $this
     */
    public function setProviderAgencyId($provider_agency_id)
    {
        $this->container['provider_agency_id'] = $provider_agency_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
