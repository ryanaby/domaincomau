<?php
/**
 * SocialBoostV1ListingRateInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: latest
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SocialBoostV1ListingRateInfo Class Doc Comment
 *
 * @category Class
 * @description ListingRateInfo
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SocialBoostV1ListingRateInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SocialBoost.v1.ListingRateInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'product_listing_level' => 'string',
        'product_listing_rule' => 'string',
        'booking_product_id' => 'int',
        'booking_product_rate_id' => 'int',
        'booking_product_name' => 'string',
        'duration_in_days' => 'int',
        'cost_ex_gst' => 'double',
        'cost_inc_gst' => 'double',
        'zone_id' => 'int',
        'product_attributes' => 'string',
        'rate_attributes' => 'string',
        'booking_method' => 'string',
        'product_for_rural' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'product_listing_level' => null,
        'product_listing_rule' => null,
        'booking_product_id' => 'int32',
        'booking_product_rate_id' => 'int32',
        'booking_product_name' => null,
        'duration_in_days' => 'int32',
        'cost_ex_gst' => 'double',
        'cost_inc_gst' => 'double',
        'zone_id' => 'int32',
        'product_attributes' => null,
        'rate_attributes' => null,
        'booking_method' => null,
        'product_for_rural' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'product_listing_level' => 'productListingLevel',
        'product_listing_rule' => 'productListingRule',
        'booking_product_id' => 'bookingProductId',
        'booking_product_rate_id' => 'bookingProductRateId',
        'booking_product_name' => 'bookingProductName',
        'duration_in_days' => 'durationInDays',
        'cost_ex_gst' => 'costExGst',
        'cost_inc_gst' => 'costIncGst',
        'zone_id' => 'zoneId',
        'product_attributes' => 'productAttributes',
        'rate_attributes' => 'rateAttributes',
        'booking_method' => 'bookingMethod',
        'product_for_rural' => 'productForRural'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'product_listing_level' => 'setProductListingLevel',
        'product_listing_rule' => 'setProductListingRule',
        'booking_product_id' => 'setBookingProductId',
        'booking_product_rate_id' => 'setBookingProductRateId',
        'booking_product_name' => 'setBookingProductName',
        'duration_in_days' => 'setDurationInDays',
        'cost_ex_gst' => 'setCostExGst',
        'cost_inc_gst' => 'setCostIncGst',
        'zone_id' => 'setZoneId',
        'product_attributes' => 'setProductAttributes',
        'rate_attributes' => 'setRateAttributes',
        'booking_method' => 'setBookingMethod',
        'product_for_rural' => 'setProductForRural'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'product_listing_level' => 'getProductListingLevel',
        'product_listing_rule' => 'getProductListingRule',
        'booking_product_id' => 'getBookingProductId',
        'booking_product_rate_id' => 'getBookingProductRateId',
        'booking_product_name' => 'getBookingProductName',
        'duration_in_days' => 'getDurationInDays',
        'cost_ex_gst' => 'getCostExGst',
        'cost_inc_gst' => 'getCostIncGst',
        'zone_id' => 'getZoneId',
        'product_attributes' => 'getProductAttributes',
        'rate_attributes' => 'getRateAttributes',
        'booking_method' => 'getBookingMethod',
        'product_for_rural' => 'getProductForRural'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const PRODUCT_LISTING_LEVEL_NONE = 'None';
    const PRODUCT_LISTING_LEVEL_PLATINUM_EXTEND = 'PlatinumExtend';
    const PRODUCT_LISTING_LEVEL_PLATINUM = 'Platinum';
    const PRODUCT_LISTING_LEVEL_GOLD = 'Gold';
    const PRODUCT_LISTING_LEVEL_SILVER = 'Silver';
    const PRODUCT_LISTING_LEVEL_BRANDED = 'Branded';
    const PRODUCT_LISTING_LEVEL_TIER1 = 'Tier1';
    const PRODUCT_LISTING_LEVEL_TIER2 = 'Tier2';
    const PRODUCT_LISTING_LEVEL_TIER3 = 'Tier3';
    const PRODUCT_LISTING_RULE_NONE = 'None';
    const PRODUCT_LISTING_RULE_EARLY_ACCESS = 'EarlyAccess';
    const PRODUCT_LISTING_RULE_SOCIAL_BOOST_ALL = 'SocialBoostAll';
    const PRODUCT_LISTING_RULE_SOCIAL_BOOST_CASUAL = 'SocialBoostCasual';
    const PRODUCT_LISTING_RULE_SOCIAL_BOOST_RURAL_ALL = 'SocialBoostRuralAll';
    const PRODUCT_LISTING_RULE_SOCIAL_BOOST_RURAL_CASUAL = 'SocialBoostRuralCasual';
    const PRODUCT_LISTING_RULE_SOCIAL_BOOST_AGENT = 'SocialBoostAgent';
    const PRODUCT_LISTING_RULE_SOCIAL_BOOST_RURAL_AGENT = 'SocialBoostRuralAgent';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getProductListingLevelAllowableValues()
    {
        return [
            self::PRODUCT_LISTING_LEVEL_NONE,
            self::PRODUCT_LISTING_LEVEL_PLATINUM_EXTEND,
            self::PRODUCT_LISTING_LEVEL_PLATINUM,
            self::PRODUCT_LISTING_LEVEL_GOLD,
            self::PRODUCT_LISTING_LEVEL_SILVER,
            self::PRODUCT_LISTING_LEVEL_BRANDED,
            self::PRODUCT_LISTING_LEVEL_TIER1,
            self::PRODUCT_LISTING_LEVEL_TIER2,
            self::PRODUCT_LISTING_LEVEL_TIER3,
        ];
    }
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getProductListingRuleAllowableValues()
    {
        return [
            self::PRODUCT_LISTING_RULE_NONE,
            self::PRODUCT_LISTING_RULE_EARLY_ACCESS,
            self::PRODUCT_LISTING_RULE_SOCIAL_BOOST_ALL,
            self::PRODUCT_LISTING_RULE_SOCIAL_BOOST_CASUAL,
            self::PRODUCT_LISTING_RULE_SOCIAL_BOOST_RURAL_ALL,
            self::PRODUCT_LISTING_RULE_SOCIAL_BOOST_RURAL_CASUAL,
            self::PRODUCT_LISTING_RULE_SOCIAL_BOOST_AGENT,
            self::PRODUCT_LISTING_RULE_SOCIAL_BOOST_RURAL_AGENT,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['product_listing_level'] = isset($data['product_listing_level']) ? $data['product_listing_level'] : null;
        $this->container['product_listing_rule'] = isset($data['product_listing_rule']) ? $data['product_listing_rule'] : null;
        $this->container['booking_product_id'] = isset($data['booking_product_id']) ? $data['booking_product_id'] : null;
        $this->container['booking_product_rate_id'] = isset($data['booking_product_rate_id']) ? $data['booking_product_rate_id'] : null;
        $this->container['booking_product_name'] = isset($data['booking_product_name']) ? $data['booking_product_name'] : null;
        $this->container['duration_in_days'] = isset($data['duration_in_days']) ? $data['duration_in_days'] : null;
        $this->container['cost_ex_gst'] = isset($data['cost_ex_gst']) ? $data['cost_ex_gst'] : null;
        $this->container['cost_inc_gst'] = isset($data['cost_inc_gst']) ? $data['cost_inc_gst'] : null;
        $this->container['zone_id'] = isset($data['zone_id']) ? $data['zone_id'] : null;
        $this->container['product_attributes'] = isset($data['product_attributes']) ? $data['product_attributes'] : null;
        $this->container['rate_attributes'] = isset($data['rate_attributes']) ? $data['rate_attributes'] : null;
        $this->container['booking_method'] = isset($data['booking_method']) ? $data['booking_method'] : null;
        $this->container['product_for_rural'] = isset($data['product_for_rural']) ? $data['product_for_rural'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getProductListingLevelAllowableValues();
        if (!is_null($this->container['product_listing_level']) && !in_array($this->container['product_listing_level'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'product_listing_level', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getProductListingRuleAllowableValues();
        if (!is_null($this->container['product_listing_rule']) && !in_array($this->container['product_listing_rule'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'product_listing_rule', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets product_listing_level
     *
     * @return string
     */
    public function getProductListingLevel()
    {
        return $this->container['product_listing_level'];
    }

    /**
     * Sets product_listing_level
     *
     * @param string $product_listing_level Gets or Sets ProductListingLevel
     *
     * @return $this
     */
    public function setProductListingLevel($product_listing_level)
    {
        $allowedValues = $this->getProductListingLevelAllowableValues();
        if (!is_null($product_listing_level) && !in_array($product_listing_level, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'product_listing_level', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['product_listing_level'] = $product_listing_level;

        return $this;
    }

    /**
     * Gets product_listing_rule
     *
     * @return string
     */
    public function getProductListingRule()
    {
        return $this->container['product_listing_rule'];
    }

    /**
     * Sets product_listing_rule
     *
     * @param string $product_listing_rule Gets or Sets ProductListingRule
     *
     * @return $this
     */
    public function setProductListingRule($product_listing_rule)
    {
        $allowedValues = $this->getProductListingRuleAllowableValues();
        if (!is_null($product_listing_rule) && !in_array($product_listing_rule, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'product_listing_rule', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['product_listing_rule'] = $product_listing_rule;

        return $this;
    }

    /**
     * Gets booking_product_id
     *
     * @return int
     */
    public function getBookingProductId()
    {
        return $this->container['booking_product_id'];
    }

    /**
     * Sets booking_product_id
     *
     * @param int $booking_product_id Gets or Sets BookingProductId
     *
     * @return $this
     */
    public function setBookingProductId($booking_product_id)
    {
        $this->container['booking_product_id'] = $booking_product_id;

        return $this;
    }

    /**
     * Gets booking_product_rate_id
     *
     * @return int
     */
    public function getBookingProductRateId()
    {
        return $this->container['booking_product_rate_id'];
    }

    /**
     * Sets booking_product_rate_id
     *
     * @param int $booking_product_rate_id Gets or Sets BookingProductRateId
     *
     * @return $this
     */
    public function setBookingProductRateId($booking_product_rate_id)
    {
        $this->container['booking_product_rate_id'] = $booking_product_rate_id;

        return $this;
    }

    /**
     * Gets booking_product_name
     *
     * @return string
     */
    public function getBookingProductName()
    {
        return $this->container['booking_product_name'];
    }

    /**
     * Sets booking_product_name
     *
     * @param string $booking_product_name Gets or Sets BookingProductName
     *
     * @return $this
     */
    public function setBookingProductName($booking_product_name)
    {
        $this->container['booking_product_name'] = $booking_product_name;

        return $this;
    }

    /**
     * Gets duration_in_days
     *
     * @return int
     */
    public function getDurationInDays()
    {
        return $this->container['duration_in_days'];
    }

    /**
     * Sets duration_in_days
     *
     * @param int $duration_in_days Gets or Sets DurationInDays
     *
     * @return $this
     */
    public function setDurationInDays($duration_in_days)
    {
        $this->container['duration_in_days'] = $duration_in_days;

        return $this;
    }

    /**
     * Gets cost_ex_gst
     *
     * @return double
     */
    public function getCostExGst()
    {
        return $this->container['cost_ex_gst'];
    }

    /**
     * Sets cost_ex_gst
     *
     * @param double $cost_ex_gst Gets or Sets CostExGst
     *
     * @return $this
     */
    public function setCostExGst($cost_ex_gst)
    {
        $this->container['cost_ex_gst'] = $cost_ex_gst;

        return $this;
    }

    /**
     * Gets cost_inc_gst
     *
     * @return double
     */
    public function getCostIncGst()
    {
        return $this->container['cost_inc_gst'];
    }

    /**
     * Sets cost_inc_gst
     *
     * @param double $cost_inc_gst Gets or Sets CostIncGst
     *
     * @return $this
     */
    public function setCostIncGst($cost_inc_gst)
    {
        $this->container['cost_inc_gst'] = $cost_inc_gst;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return int
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param int $zone_id Gets or Sets ZoneId
     *
     * @return $this
     */
    public function setZoneId($zone_id)
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }

    /**
     * Gets product_attributes
     *
     * @return string
     */
    public function getProductAttributes()
    {
        return $this->container['product_attributes'];
    }

    /**
     * Sets product_attributes
     *
     * @param string $product_attributes Gets or Sets ProductAttributes
     *
     * @return $this
     */
    public function setProductAttributes($product_attributes)
    {
        $this->container['product_attributes'] = $product_attributes;

        return $this;
    }

    /**
     * Gets rate_attributes
     *
     * @return string
     */
    public function getRateAttributes()
    {
        return $this->container['rate_attributes'];
    }

    /**
     * Sets rate_attributes
     *
     * @param string $rate_attributes Gets or Sets RateAttributes
     *
     * @return $this
     */
    public function setRateAttributes($rate_attributes)
    {
        $this->container['rate_attributes'] = $rate_attributes;

        return $this;
    }

    /**
     * Gets booking_method
     *
     * @return string
     */
    public function getBookingMethod()
    {
        return $this->container['booking_method'];
    }

    /**
     * Sets booking_method
     *
     * @param string $booking_method Gets or Sets BookingMethod
     *
     * @return $this
     */
    public function setBookingMethod($booking_method)
    {
        $this->container['booking_method'] = $booking_method;

        return $this;
    }

    /**
     * Gets product_for_rural
     *
     * @return bool
     */
    public function getProductForRural()
    {
        return $this->container['product_for_rural'];
    }

    /**
     * Sets product_for_rural
     *
     * @param bool $product_for_rural Gets or Sets ProductForRural
     *
     * @return $this
     */
    public function setProductForRural($product_for_rural)
    {
        $this->container['product_for_rural'] = $product_for_rural;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
