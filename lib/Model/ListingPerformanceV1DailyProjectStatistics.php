<?php
/**
 * ListingPerformanceV1DailyProjectStatistics
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: latest
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ListingPerformanceV1DailyProjectStatistics Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ListingPerformanceV1DailyProjectStatistics implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ListingPerformance.v1.DailyProjectStatistics';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'total_photo_views' => 'int',
        'total_floorplan_views' => 'int',
        'total_map_views' => 'int',
        'total_video_views' => 'int',
        'total_agent_detail_views' => 'int',
        'total_search_carousel_views' => 'int',
        'total_agent_phone_number_reveals' => 'int',
        'total_enquiries' => 'int',
        'total_email_to_friend' => 'int',
        'total_shared_via_social_media' => 'int',
        'total_inspection_time_saving' => 'int',
        'total_call_to_agent_from_mobile' => 'int',
        'dev_project_id' => 'int',
        'total_views' => 'int',
        'total_individual_image_views' => 'int',
        'total_ad_click' => 'int',
        'total_clicks_to_project_listing' => 'int',
        'total_external_website_views' => 'int',
        'total_email_enquiries' => 'int',
        'event_date' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'total_photo_views' => 'int32',
        'total_floorplan_views' => 'int32',
        'total_map_views' => 'int32',
        'total_video_views' => 'int32',
        'total_agent_detail_views' => 'int32',
        'total_search_carousel_views' => 'int32',
        'total_agent_phone_number_reveals' => 'int32',
        'total_enquiries' => 'int32',
        'total_email_to_friend' => 'int32',
        'total_shared_via_social_media' => 'int32',
        'total_inspection_time_saving' => 'int32',
        'total_call_to_agent_from_mobile' => 'int32',
        'dev_project_id' => 'int64',
        'total_views' => 'int32',
        'total_individual_image_views' => 'int32',
        'total_ad_click' => 'int32',
        'total_clicks_to_project_listing' => 'int32',
        'total_external_website_views' => 'int32',
        'total_email_enquiries' => 'int32',
        'event_date' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'total_photo_views' => 'totalPhotoViews',
        'total_floorplan_views' => 'totalFloorplanViews',
        'total_map_views' => 'totalMapViews',
        'total_video_views' => 'totalVideoViews',
        'total_agent_detail_views' => 'totalAgentDetailViews',
        'total_search_carousel_views' => 'totalSearchCarouselViews',
        'total_agent_phone_number_reveals' => 'totalAgentPhoneNumberReveals',
        'total_enquiries' => 'totalEnquiries',
        'total_email_to_friend' => 'totalEmailToFriend',
        'total_shared_via_social_media' => 'totalSharedViaSocialMedia',
        'total_inspection_time_saving' => 'totalInspectionTimeSaving',
        'total_call_to_agent_from_mobile' => 'totalCallToAgentFromMobile',
        'dev_project_id' => 'devProjectId',
        'total_views' => 'totalViews',
        'total_individual_image_views' => 'totalIndividualImageViews',
        'total_ad_click' => 'totalAdClick',
        'total_clicks_to_project_listing' => 'totalClicksToProjectListing',
        'total_external_website_views' => 'totalExternalWebsiteViews',
        'total_email_enquiries' => 'totalEmailEnquiries',
        'event_date' => 'eventDate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'total_photo_views' => 'setTotalPhotoViews',
        'total_floorplan_views' => 'setTotalFloorplanViews',
        'total_map_views' => 'setTotalMapViews',
        'total_video_views' => 'setTotalVideoViews',
        'total_agent_detail_views' => 'setTotalAgentDetailViews',
        'total_search_carousel_views' => 'setTotalSearchCarouselViews',
        'total_agent_phone_number_reveals' => 'setTotalAgentPhoneNumberReveals',
        'total_enquiries' => 'setTotalEnquiries',
        'total_email_to_friend' => 'setTotalEmailToFriend',
        'total_shared_via_social_media' => 'setTotalSharedViaSocialMedia',
        'total_inspection_time_saving' => 'setTotalInspectionTimeSaving',
        'total_call_to_agent_from_mobile' => 'setTotalCallToAgentFromMobile',
        'dev_project_id' => 'setDevProjectId',
        'total_views' => 'setTotalViews',
        'total_individual_image_views' => 'setTotalIndividualImageViews',
        'total_ad_click' => 'setTotalAdClick',
        'total_clicks_to_project_listing' => 'setTotalClicksToProjectListing',
        'total_external_website_views' => 'setTotalExternalWebsiteViews',
        'total_email_enquiries' => 'setTotalEmailEnquiries',
        'event_date' => 'setEventDate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'total_photo_views' => 'getTotalPhotoViews',
        'total_floorplan_views' => 'getTotalFloorplanViews',
        'total_map_views' => 'getTotalMapViews',
        'total_video_views' => 'getTotalVideoViews',
        'total_agent_detail_views' => 'getTotalAgentDetailViews',
        'total_search_carousel_views' => 'getTotalSearchCarouselViews',
        'total_agent_phone_number_reveals' => 'getTotalAgentPhoneNumberReveals',
        'total_enquiries' => 'getTotalEnquiries',
        'total_email_to_friend' => 'getTotalEmailToFriend',
        'total_shared_via_social_media' => 'getTotalSharedViaSocialMedia',
        'total_inspection_time_saving' => 'getTotalInspectionTimeSaving',
        'total_call_to_agent_from_mobile' => 'getTotalCallToAgentFromMobile',
        'dev_project_id' => 'getDevProjectId',
        'total_views' => 'getTotalViews',
        'total_individual_image_views' => 'getTotalIndividualImageViews',
        'total_ad_click' => 'getTotalAdClick',
        'total_clicks_to_project_listing' => 'getTotalClicksToProjectListing',
        'total_external_website_views' => 'getTotalExternalWebsiteViews',
        'total_email_enquiries' => 'getTotalEmailEnquiries',
        'event_date' => 'getEventDate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['total_photo_views'] = isset($data['total_photo_views']) ? $data['total_photo_views'] : null;
        $this->container['total_floorplan_views'] = isset($data['total_floorplan_views']) ? $data['total_floorplan_views'] : null;
        $this->container['total_map_views'] = isset($data['total_map_views']) ? $data['total_map_views'] : null;
        $this->container['total_video_views'] = isset($data['total_video_views']) ? $data['total_video_views'] : null;
        $this->container['total_agent_detail_views'] = isset($data['total_agent_detail_views']) ? $data['total_agent_detail_views'] : null;
        $this->container['total_search_carousel_views'] = isset($data['total_search_carousel_views']) ? $data['total_search_carousel_views'] : null;
        $this->container['total_agent_phone_number_reveals'] = isset($data['total_agent_phone_number_reveals']) ? $data['total_agent_phone_number_reveals'] : null;
        $this->container['total_enquiries'] = isset($data['total_enquiries']) ? $data['total_enquiries'] : null;
        $this->container['total_email_to_friend'] = isset($data['total_email_to_friend']) ? $data['total_email_to_friend'] : null;
        $this->container['total_shared_via_social_media'] = isset($data['total_shared_via_social_media']) ? $data['total_shared_via_social_media'] : null;
        $this->container['total_inspection_time_saving'] = isset($data['total_inspection_time_saving']) ? $data['total_inspection_time_saving'] : null;
        $this->container['total_call_to_agent_from_mobile'] = isset($data['total_call_to_agent_from_mobile']) ? $data['total_call_to_agent_from_mobile'] : null;
        $this->container['dev_project_id'] = isset($data['dev_project_id']) ? $data['dev_project_id'] : null;
        $this->container['total_views'] = isset($data['total_views']) ? $data['total_views'] : null;
        $this->container['total_individual_image_views'] = isset($data['total_individual_image_views']) ? $data['total_individual_image_views'] : null;
        $this->container['total_ad_click'] = isset($data['total_ad_click']) ? $data['total_ad_click'] : null;
        $this->container['total_clicks_to_project_listing'] = isset($data['total_clicks_to_project_listing']) ? $data['total_clicks_to_project_listing'] : null;
        $this->container['total_external_website_views'] = isset($data['total_external_website_views']) ? $data['total_external_website_views'] : null;
        $this->container['total_email_enquiries'] = isset($data['total_email_enquiries']) ? $data['total_email_enquiries'] : null;
        $this->container['event_date'] = isset($data['event_date']) ? $data['event_date'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets total_photo_views
     *
     * @return int
     */
    public function getTotalPhotoViews()
    {
        return $this->container['total_photo_views'];
    }

    /**
     * Sets total_photo_views
     *
     * @param int $total_photo_views Total number of photo views
     *
     * @return $this
     */
    public function setTotalPhotoViews($total_photo_views)
    {
        $this->container['total_photo_views'] = $total_photo_views;

        return $this;
    }

    /**
     * Gets total_floorplan_views
     *
     * @return int
     */
    public function getTotalFloorplanViews()
    {
        return $this->container['total_floorplan_views'];
    }

    /**
     * Sets total_floorplan_views
     *
     * @param int $total_floorplan_views Total number of floorplan views
     *
     * @return $this
     */
    public function setTotalFloorplanViews($total_floorplan_views)
    {
        $this->container['total_floorplan_views'] = $total_floorplan_views;

        return $this;
    }

    /**
     * Gets total_map_views
     *
     * @return int
     */
    public function getTotalMapViews()
    {
        return $this->container['total_map_views'];
    }

    /**
     * Sets total_map_views
     *
     * @param int $total_map_views Total number of address map views
     *
     * @return $this
     */
    public function setTotalMapViews($total_map_views)
    {
        $this->container['total_map_views'] = $total_map_views;

        return $this;
    }

    /**
     * Gets total_video_views
     *
     * @return int
     */
    public function getTotalVideoViews()
    {
        return $this->container['total_video_views'];
    }

    /**
     * Sets total_video_views
     *
     * @param int $total_video_views Total number of video views
     *
     * @return $this
     */
    public function setTotalVideoViews($total_video_views)
    {
        $this->container['total_video_views'] = $total_video_views;

        return $this;
    }

    /**
     * Gets total_agent_detail_views
     *
     * @return int
     */
    public function getTotalAgentDetailViews()
    {
        return $this->container['total_agent_detail_views'];
    }

    /**
     * Sets total_agent_detail_views
     *
     * @param int $total_agent_detail_views Total number of agent detail views
     *
     * @return $this
     */
    public function setTotalAgentDetailViews($total_agent_detail_views)
    {
        $this->container['total_agent_detail_views'] = $total_agent_detail_views;

        return $this;
    }

    /**
     * Gets total_search_carousel_views
     *
     * @return int
     */
    public function getTotalSearchCarouselViews()
    {
        return $this->container['total_search_carousel_views'];
    }

    /**
     * Sets total_search_carousel_views
     *
     * @param int $total_search_carousel_views Total number of views under search carousel
     *
     * @return $this
     */
    public function setTotalSearchCarouselViews($total_search_carousel_views)
    {
        $this->container['total_search_carousel_views'] = $total_search_carousel_views;

        return $this;
    }

    /**
     * Gets total_agent_phone_number_reveals
     *
     * @return int
     */
    public function getTotalAgentPhoneNumberReveals()
    {
        return $this->container['total_agent_phone_number_reveals'];
    }

    /**
     * Sets total_agent_phone_number_reveals
     *
     * @param int $total_agent_phone_number_reveals Total number of times the agent phone number was revealed for contact
     *
     * @return $this
     */
    public function setTotalAgentPhoneNumberReveals($total_agent_phone_number_reveals)
    {
        $this->container['total_agent_phone_number_reveals'] = $total_agent_phone_number_reveals;

        return $this;
    }

    /**
     * Gets total_enquiries
     *
     * @return int
     */
    public function getTotalEnquiries()
    {
        return $this->container['total_enquiries'];
    }

    /**
     * Sets total_enquiries
     *
     * @param int $total_enquiries Total number of email enquiries
     *
     * @return $this
     */
    public function setTotalEnquiries($total_enquiries)
    {
        $this->container['total_enquiries'] = $total_enquiries;

        return $this;
    }

    /**
     * Gets total_email_to_friend
     *
     * @return int
     */
    public function getTotalEmailToFriend()
    {
        return $this->container['total_email_to_friend'];
    }

    /**
     * Sets total_email_to_friend
     *
     * @param int $total_email_to_friend Total number of times the link was emailed
     *
     * @return $this
     */
    public function setTotalEmailToFriend($total_email_to_friend)
    {
        $this->container['total_email_to_friend'] = $total_email_to_friend;

        return $this;
    }

    /**
     * Gets total_shared_via_social_media
     *
     * @return int
     */
    public function getTotalSharedViaSocialMedia()
    {
        return $this->container['total_shared_via_social_media'];
    }

    /**
     * Sets total_shared_via_social_media
     *
     * @param int $total_shared_via_social_media Total number of shares via social media
     *
     * @return $this
     */
    public function setTotalSharedViaSocialMedia($total_shared_via_social_media)
    {
        $this->container['total_shared_via_social_media'] = $total_shared_via_social_media;

        return $this;
    }

    /**
     * Gets total_inspection_time_saving
     *
     * @return int
     */
    public function getTotalInspectionTimeSaving()
    {
        return $this->container['total_inspection_time_saving'];
    }

    /**
     * Sets total_inspection_time_saving
     *
     * @param int $total_inspection_time_saving Total number of times when the inspection was saved to calendar
     *
     * @return $this
     */
    public function setTotalInspectionTimeSaving($total_inspection_time_saving)
    {
        $this->container['total_inspection_time_saving'] = $total_inspection_time_saving;

        return $this;
    }

    /**
     * Gets total_call_to_agent_from_mobile
     *
     * @return int
     */
    public function getTotalCallToAgentFromMobile()
    {
        return $this->container['total_call_to_agent_from_mobile'];
    }

    /**
     * Sets total_call_to_agent_from_mobile
     *
     * @param int $total_call_to_agent_from_mobile Total number of calls made to agent
     *
     * @return $this
     */
    public function setTotalCallToAgentFromMobile($total_call_to_agent_from_mobile)
    {
        $this->container['total_call_to_agent_from_mobile'] = $total_call_to_agent_from_mobile;

        return $this;
    }

    /**
     * Gets dev_project_id
     *
     * @return int
     */
    public function getDevProjectId()
    {
        return $this->container['dev_project_id'];
    }

    /**
     * Sets dev_project_id
     *
     * @param int $dev_project_id Domain Advertisement Id
     *
     * @return $this
     */
    public function setDevProjectId($dev_project_id)
    {
        $this->container['dev_project_id'] = $dev_project_id;

        return $this;
    }

    /**
     * Gets total_views
     *
     * @return int
     */
    public function getTotalViews()
    {
        return $this->container['total_views'];
    }

    /**
     * Sets total_views
     *
     * @param int $total_views Total number of views
     *
     * @return $this
     */
    public function setTotalViews($total_views)
    {
        $this->container['total_views'] = $total_views;

        return $this;
    }

    /**
     * Gets total_individual_image_views
     *
     * @return int
     */
    public function getTotalIndividualImageViews()
    {
        return $this->container['total_individual_image_views'];
    }

    /**
     * Sets total_individual_image_views
     *
     * @param int $total_individual_image_views Total number of individual image views
     *
     * @return $this
     */
    public function setTotalIndividualImageViews($total_individual_image_views)
    {
        $this->container['total_individual_image_views'] = $total_individual_image_views;

        return $this;
    }

    /**
     * Gets total_ad_click
     *
     * @return int
     */
    public function getTotalAdClick()
    {
        return $this->container['total_ad_click'];
    }

    /**
     * Sets total_ad_click
     *
     * @param int $total_ad_click Total number of ads clicked
     *
     * @return $this
     */
    public function setTotalAdClick($total_ad_click)
    {
        $this->container['total_ad_click'] = $total_ad_click;

        return $this;
    }

    /**
     * Gets total_clicks_to_project_listing
     *
     * @return int
     */
    public function getTotalClicksToProjectListing()
    {
        return $this->container['total_clicks_to_project_listing'];
    }

    /**
     * Sets total_clicks_to_project_listing
     *
     * @param int $total_clicks_to_project_listing Total number of click throughs to project listings
     *
     * @return $this
     */
    public function setTotalClicksToProjectListing($total_clicks_to_project_listing)
    {
        $this->container['total_clicks_to_project_listing'] = $total_clicks_to_project_listing;

        return $this;
    }

    /**
     * Gets total_external_website_views
     *
     * @return int
     */
    public function getTotalExternalWebsiteViews()
    {
        return $this->container['total_external_website_views'];
    }

    /**
     * Sets total_external_website_views
     *
     * @param int $total_external_website_views Total number of external website view
     *
     * @return $this
     */
    public function setTotalExternalWebsiteViews($total_external_website_views)
    {
        $this->container['total_external_website_views'] = $total_external_website_views;

        return $this;
    }

    /**
     * Gets total_email_enquiries
     *
     * @return int
     */
    public function getTotalEmailEnquiries()
    {
        return $this->container['total_email_enquiries'];
    }

    /**
     * Sets total_email_enquiries
     *
     * @param int $total_email_enquiries Total number of email enquiries
     *
     * @return $this
     */
    public function setTotalEmailEnquiries($total_email_enquiries)
    {
        $this->container['total_email_enquiries'] = $total_email_enquiries;

        return $this;
    }

    /**
     * Gets event_date
     *
     * @return \DateTime
     */
    public function getEventDate()
    {
        return $this->container['event_date'];
    }

    /**
     * Sets event_date
     *
     * @param \DateTime $event_date event_date
     *
     * @return $this
     */
    public function setEventDate($event_date)
    {
        $this->container['event_date'] = $event_date;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
