<?php
/**
 * AgenciesV2AgencyDetails
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: latest
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AgenciesV2AgencyDetails Class Doc Comment
 *
 * @category Class
 * @description AgencyDetails
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AgenciesV2AgencyDetails implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Agencies.V2.AgencyDetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'street_address1' => 'string',
        'street_address2' => 'string',
        'suburb' => 'string',
        'state' => 'string',
        'postcode' => 'string',
        'agency_website' => 'string',
        'principal_name' => 'string',
        'principal_email' => 'string',
        'show_past_sales_prices' => 'bool',
        'is_agency_report_enabled' => 'bool',
        'sales_email' => 'string',
        'rental_email' => 'string',
        'is_promotional_telephone_active' => 'bool',
        'hide_market_price_estimate' => 'bool',
        'limit_email_domain' => 'bool',
        'show_tab_sold_last_year' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'street_address1' => null,
        'street_address2' => null,
        'suburb' => null,
        'state' => null,
        'postcode' => null,
        'agency_website' => null,
        'principal_name' => null,
        'principal_email' => null,
        'show_past_sales_prices' => null,
        'is_agency_report_enabled' => null,
        'sales_email' => null,
        'rental_email' => null,
        'is_promotional_telephone_active' => null,
        'hide_market_price_estimate' => null,
        'limit_email_domain' => null,
        'show_tab_sold_last_year' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'street_address1' => 'streetAddress1',
        'street_address2' => 'streetAddress2',
        'suburb' => 'suburb',
        'state' => 'state',
        'postcode' => 'postcode',
        'agency_website' => 'agencyWebsite',
        'principal_name' => 'principalName',
        'principal_email' => 'principalEmail',
        'show_past_sales_prices' => 'showPastSalesPrices',
        'is_agency_report_enabled' => 'isAgencyReportEnabled',
        'sales_email' => 'salesEmail',
        'rental_email' => 'rentalEmail',
        'is_promotional_telephone_active' => 'isPromotionalTelephoneActive',
        'hide_market_price_estimate' => 'hideMarketPriceEstimate',
        'limit_email_domain' => 'limitEmailDomain',
        'show_tab_sold_last_year' => 'showTabSoldLastYear'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'street_address1' => 'setStreetAddress1',
        'street_address2' => 'setStreetAddress2',
        'suburb' => 'setSuburb',
        'state' => 'setState',
        'postcode' => 'setPostcode',
        'agency_website' => 'setAgencyWebsite',
        'principal_name' => 'setPrincipalName',
        'principal_email' => 'setPrincipalEmail',
        'show_past_sales_prices' => 'setShowPastSalesPrices',
        'is_agency_report_enabled' => 'setIsAgencyReportEnabled',
        'sales_email' => 'setSalesEmail',
        'rental_email' => 'setRentalEmail',
        'is_promotional_telephone_active' => 'setIsPromotionalTelephoneActive',
        'hide_market_price_estimate' => 'setHideMarketPriceEstimate',
        'limit_email_domain' => 'setLimitEmailDomain',
        'show_tab_sold_last_year' => 'setShowTabSoldLastYear'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'street_address1' => 'getStreetAddress1',
        'street_address2' => 'getStreetAddress2',
        'suburb' => 'getSuburb',
        'state' => 'getState',
        'postcode' => 'getPostcode',
        'agency_website' => 'getAgencyWebsite',
        'principal_name' => 'getPrincipalName',
        'principal_email' => 'getPrincipalEmail',
        'show_past_sales_prices' => 'getShowPastSalesPrices',
        'is_agency_report_enabled' => 'getIsAgencyReportEnabled',
        'sales_email' => 'getSalesEmail',
        'rental_email' => 'getRentalEmail',
        'is_promotional_telephone_active' => 'getIsPromotionalTelephoneActive',
        'hide_market_price_estimate' => 'getHideMarketPriceEstimate',
        'limit_email_domain' => 'getLimitEmailDomain',
        'show_tab_sold_last_year' => 'getShowTabSoldLastYear'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['street_address1'] = isset($data['street_address1']) ? $data['street_address1'] : null;
        $this->container['street_address2'] = isset($data['street_address2']) ? $data['street_address2'] : null;
        $this->container['suburb'] = isset($data['suburb']) ? $data['suburb'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['postcode'] = isset($data['postcode']) ? $data['postcode'] : null;
        $this->container['agency_website'] = isset($data['agency_website']) ? $data['agency_website'] : null;
        $this->container['principal_name'] = isset($data['principal_name']) ? $data['principal_name'] : null;
        $this->container['principal_email'] = isset($data['principal_email']) ? $data['principal_email'] : null;
        $this->container['show_past_sales_prices'] = isset($data['show_past_sales_prices']) ? $data['show_past_sales_prices'] : null;
        $this->container['is_agency_report_enabled'] = isset($data['is_agency_report_enabled']) ? $data['is_agency_report_enabled'] : null;
        $this->container['sales_email'] = isset($data['sales_email']) ? $data['sales_email'] : null;
        $this->container['rental_email'] = isset($data['rental_email']) ? $data['rental_email'] : null;
        $this->container['is_promotional_telephone_active'] = isset($data['is_promotional_telephone_active']) ? $data['is_promotional_telephone_active'] : null;
        $this->container['hide_market_price_estimate'] = isset($data['hide_market_price_estimate']) ? $data['hide_market_price_estimate'] : null;
        $this->container['limit_email_domain'] = isset($data['limit_email_domain']) ? $data['limit_email_domain'] : null;
        $this->container['show_tab_sold_last_year'] = isset($data['show_tab_sold_last_year']) ? $data['show_tab_sold_last_year'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['street_address1'] === null) {
            $invalidProperties[] = "'street_address1' can't be null";
        }
        if ($this->container['suburb'] === null) {
            $invalidProperties[] = "'suburb' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['postcode'] === null) {
            $invalidProperties[] = "'postcode' can't be null";
        }
        if ($this->container['hide_market_price_estimate'] === null) {
            $invalidProperties[] = "'hide_market_price_estimate' can't be null";
        }
        if ($this->container['limit_email_domain'] === null) {
            $invalidProperties[] = "'limit_email_domain' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets street_address1
     *
     * @return string
     */
    public function getStreetAddress1()
    {
        return $this->container['street_address1'];
    }

    /**
     * Sets street_address1
     *
     * @param string $street_address1 Gets or Sets StreetAddress1
     *
     * @return $this
     */
    public function setStreetAddress1($street_address1)
    {
        $this->container['street_address1'] = $street_address1;

        return $this;
    }

    /**
     * Gets street_address2
     *
     * @return string
     */
    public function getStreetAddress2()
    {
        return $this->container['street_address2'];
    }

    /**
     * Sets street_address2
     *
     * @param string $street_address2 Gets or Sets StreetAddress2
     *
     * @return $this
     */
    public function setStreetAddress2($street_address2)
    {
        $this->container['street_address2'] = $street_address2;

        return $this;
    }

    /**
     * Gets suburb
     *
     * @return string
     */
    public function getSuburb()
    {
        return $this->container['suburb'];
    }

    /**
     * Sets suburb
     *
     * @param string $suburb Gets or Sets Suburb
     *
     * @return $this
     */
    public function setSuburb($suburb)
    {
        $this->container['suburb'] = $suburb;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state Gets or Sets State
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postcode
     *
     * @return string
     */
    public function getPostcode()
    {
        return $this->container['postcode'];
    }

    /**
     * Sets postcode
     *
     * @param string $postcode Gets or Sets Postcode
     *
     * @return $this
     */
    public function setPostcode($postcode)
    {
        $this->container['postcode'] = $postcode;

        return $this;
    }

    /**
     * Gets agency_website
     *
     * @return string
     */
    public function getAgencyWebsite()
    {
        return $this->container['agency_website'];
    }

    /**
     * Sets agency_website
     *
     * @param string $agency_website Gets or Sets AgencyWebsite
     *
     * @return $this
     */
    public function setAgencyWebsite($agency_website)
    {
        $this->container['agency_website'] = $agency_website;

        return $this;
    }

    /**
     * Gets principal_name
     *
     * @return string
     */
    public function getPrincipalName()
    {
        return $this->container['principal_name'];
    }

    /**
     * Sets principal_name
     *
     * @param string $principal_name Gets or Sets PrincipalName
     *
     * @return $this
     */
    public function setPrincipalName($principal_name)
    {
        $this->container['principal_name'] = $principal_name;

        return $this;
    }

    /**
     * Gets principal_email
     *
     * @return string
     */
    public function getPrincipalEmail()
    {
        return $this->container['principal_email'];
    }

    /**
     * Sets principal_email
     *
     * @param string $principal_email Gets or Sets PrincipalEmail
     *
     * @return $this
     */
    public function setPrincipalEmail($principal_email)
    {
        $this->container['principal_email'] = $principal_email;

        return $this;
    }

    /**
     * Gets show_past_sales_prices
     *
     * @return bool
     */
    public function getShowPastSalesPrices()
    {
        return $this->container['show_past_sales_prices'];
    }

    /**
     * Sets show_past_sales_prices
     *
     * @param bool $show_past_sales_prices Gets or Sets ShowPastSalesPrices
     *
     * @return $this
     */
    public function setShowPastSalesPrices($show_past_sales_prices)
    {
        $this->container['show_past_sales_prices'] = $show_past_sales_prices;

        return $this;
    }

    /**
     * Gets is_agency_report_enabled
     *
     * @return bool
     */
    public function getIsAgencyReportEnabled()
    {
        return $this->container['is_agency_report_enabled'];
    }

    /**
     * Sets is_agency_report_enabled
     *
     * @param bool $is_agency_report_enabled Gets or Sets IsAgencyReportEnabled
     *
     * @return $this
     */
    public function setIsAgencyReportEnabled($is_agency_report_enabled)
    {
        $this->container['is_agency_report_enabled'] = $is_agency_report_enabled;

        return $this;
    }

    /**
     * Gets sales_email
     *
     * @return string
     */
    public function getSalesEmail()
    {
        return $this->container['sales_email'];
    }

    /**
     * Sets sales_email
     *
     * @param string $sales_email Gets or Sets SalesEmail
     *
     * @return $this
     */
    public function setSalesEmail($sales_email)
    {
        $this->container['sales_email'] = $sales_email;

        return $this;
    }

    /**
     * Gets rental_email
     *
     * @return string
     */
    public function getRentalEmail()
    {
        return $this->container['rental_email'];
    }

    /**
     * Sets rental_email
     *
     * @param string $rental_email Gets or Sets RentalEmail
     *
     * @return $this
     */
    public function setRentalEmail($rental_email)
    {
        $this->container['rental_email'] = $rental_email;

        return $this;
    }

    /**
     * Gets is_promotional_telephone_active
     *
     * @return bool
     */
    public function getIsPromotionalTelephoneActive()
    {
        return $this->container['is_promotional_telephone_active'];
    }

    /**
     * Sets is_promotional_telephone_active
     *
     * @param bool $is_promotional_telephone_active Gets or Sets IsPromotionalTelephoneActive
     *
     * @return $this
     */
    public function setIsPromotionalTelephoneActive($is_promotional_telephone_active)
    {
        $this->container['is_promotional_telephone_active'] = $is_promotional_telephone_active;

        return $this;
    }

    /**
     * Gets hide_market_price_estimate
     *
     * @return bool
     */
    public function getHideMarketPriceEstimate()
    {
        return $this->container['hide_market_price_estimate'];
    }

    /**
     * Sets hide_market_price_estimate
     *
     * @param bool $hide_market_price_estimate Gets or Sets HideMarketPriceEstimate
     *
     * @return $this
     */
    public function setHideMarketPriceEstimate($hide_market_price_estimate)
    {
        $this->container['hide_market_price_estimate'] = $hide_market_price_estimate;

        return $this;
    }

    /**
     * Gets limit_email_domain
     *
     * @return bool
     */
    public function getLimitEmailDomain()
    {
        return $this->container['limit_email_domain'];
    }

    /**
     * Sets limit_email_domain
     *
     * @param bool $limit_email_domain Gets or Sets LimitEmailDomain
     *
     * @return $this
     */
    public function setLimitEmailDomain($limit_email_domain)
    {
        $this->container['limit_email_domain'] = $limit_email_domain;

        return $this;
    }

    /**
     * Gets show_tab_sold_last_year
     *
     * @return bool
     */
    public function getShowTabSoldLastYear()
    {
        return $this->container['show_tab_sold_last_year'];
    }

    /**
     * Sets show_tab_sold_last_year
     *
     * @param bool $show_tab_sold_last_year Gets or Sets ShowTabSoldLastYear
     *
     * @return $this
     */
    public function setShowTabSoldLastYear($show_tab_sold_last_year)
    {
        $this->container['show_tab_sold_last_year'] = $show_tab_sold_last_year;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
