<?php
/**
 * AgenciesV1Agent
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * OpenAPI spec version: latest
 * Contact: api@domain.com.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AgenciesV1Agent Class Doc Comment
 *
 * @category Class
 * @description AgentDto
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AgenciesV1Agent implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Agencies.V1.Agent';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'date_updated' => '\DateTime',
        'agency_id' => 'int',
        'agent_id' => 'int',
        'email' => 'string',
        'first_name' => 'string',
        'mobile' => 'string',
        'photo' => 'string',
        'last_name' => 'string',
        'is_active_profile_page' => 'string',
        'phone' => 'string',
        'sale_active' => 'bool',
        'rental_active' => 'bool',
        'secondary_email' => 'string',
        'facebook_url' => 'string',
        'twitter_url' => 'string',
        'agent_video' => 'string',
        'profile_text' => 'string',
        'is_hide_sold_leased_listings' => 'bool',
        'google_plus_url' => 'string',
        'personal_website_url' => 'string',
        'linked_in_url' => 'string',
        'fax' => 'string',
        'mug_shot_url' => 'string',
        'mug_shot_new' => 'string',
        'contact_type_code' => 'int',
        'receives_requests' => 'bool',
        'cre_agent_video_url' => 'string',
        'receive_scheduled_report_email' => 'bool',
        'profile_url' => 'string',
        'job_position' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'date_updated' => 'date-time',
        'agency_id' => 'int32',
        'agent_id' => 'int32',
        'email' => null,
        'first_name' => null,
        'mobile' => null,
        'photo' => null,
        'last_name' => null,
        'is_active_profile_page' => null,
        'phone' => null,
        'sale_active' => null,
        'rental_active' => null,
        'secondary_email' => null,
        'facebook_url' => null,
        'twitter_url' => null,
        'agent_video' => null,
        'profile_text' => null,
        'is_hide_sold_leased_listings' => null,
        'google_plus_url' => null,
        'personal_website_url' => null,
        'linked_in_url' => null,
        'fax' => null,
        'mug_shot_url' => null,
        'mug_shot_new' => null,
        'contact_type_code' => 'int32',
        'receives_requests' => null,
        'cre_agent_video_url' => null,
        'receive_scheduled_report_email' => null,
        'profile_url' => null,
        'job_position' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'date_updated' => 'dateUpdated',
        'agency_id' => 'agencyId',
        'agent_id' => 'agentId',
        'email' => 'email',
        'first_name' => 'firstName',
        'mobile' => 'mobile',
        'photo' => 'photo',
        'last_name' => 'lastName',
        'is_active_profile_page' => 'isActiveProfilePage',
        'phone' => 'phone',
        'sale_active' => 'saleActive',
        'rental_active' => 'rentalActive',
        'secondary_email' => 'secondaryEmail',
        'facebook_url' => 'facebookUrl',
        'twitter_url' => 'twitterUrl',
        'agent_video' => 'agentVideo',
        'profile_text' => 'profileText',
        'is_hide_sold_leased_listings' => 'isHideSoldLeasedListings',
        'google_plus_url' => 'googlePlusUrl',
        'personal_website_url' => 'personalWebsiteUrl',
        'linked_in_url' => 'linkedInUrl',
        'fax' => 'fax',
        'mug_shot_url' => 'mugShotURL',
        'mug_shot_new' => 'mugShotNew',
        'contact_type_code' => 'contactTypeCode',
        'receives_requests' => 'receivesRequests',
        'cre_agent_video_url' => 'creAgentVideoURL',
        'receive_scheduled_report_email' => 'receiveScheduledReportEmail',
        'profile_url' => 'profileUrl',
        'job_position' => 'jobPosition'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'date_updated' => 'setDateUpdated',
        'agency_id' => 'setAgencyId',
        'agent_id' => 'setAgentId',
        'email' => 'setEmail',
        'first_name' => 'setFirstName',
        'mobile' => 'setMobile',
        'photo' => 'setPhoto',
        'last_name' => 'setLastName',
        'is_active_profile_page' => 'setIsActiveProfilePage',
        'phone' => 'setPhone',
        'sale_active' => 'setSaleActive',
        'rental_active' => 'setRentalActive',
        'secondary_email' => 'setSecondaryEmail',
        'facebook_url' => 'setFacebookUrl',
        'twitter_url' => 'setTwitterUrl',
        'agent_video' => 'setAgentVideo',
        'profile_text' => 'setProfileText',
        'is_hide_sold_leased_listings' => 'setIsHideSoldLeasedListings',
        'google_plus_url' => 'setGooglePlusUrl',
        'personal_website_url' => 'setPersonalWebsiteUrl',
        'linked_in_url' => 'setLinkedInUrl',
        'fax' => 'setFax',
        'mug_shot_url' => 'setMugShotUrl',
        'mug_shot_new' => 'setMugShotNew',
        'contact_type_code' => 'setContactTypeCode',
        'receives_requests' => 'setReceivesRequests',
        'cre_agent_video_url' => 'setCreAgentVideoUrl',
        'receive_scheduled_report_email' => 'setReceiveScheduledReportEmail',
        'profile_url' => 'setProfileUrl',
        'job_position' => 'setJobPosition'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'date_updated' => 'getDateUpdated',
        'agency_id' => 'getAgencyId',
        'agent_id' => 'getAgentId',
        'email' => 'getEmail',
        'first_name' => 'getFirstName',
        'mobile' => 'getMobile',
        'photo' => 'getPhoto',
        'last_name' => 'getLastName',
        'is_active_profile_page' => 'getIsActiveProfilePage',
        'phone' => 'getPhone',
        'sale_active' => 'getSaleActive',
        'rental_active' => 'getRentalActive',
        'secondary_email' => 'getSecondaryEmail',
        'facebook_url' => 'getFacebookUrl',
        'twitter_url' => 'getTwitterUrl',
        'agent_video' => 'getAgentVideo',
        'profile_text' => 'getProfileText',
        'is_hide_sold_leased_listings' => 'getIsHideSoldLeasedListings',
        'google_plus_url' => 'getGooglePlusUrl',
        'personal_website_url' => 'getPersonalWebsiteUrl',
        'linked_in_url' => 'getLinkedInUrl',
        'fax' => 'getFax',
        'mug_shot_url' => 'getMugShotUrl',
        'mug_shot_new' => 'getMugShotNew',
        'contact_type_code' => 'getContactTypeCode',
        'receives_requests' => 'getReceivesRequests',
        'cre_agent_video_url' => 'getCreAgentVideoUrl',
        'receive_scheduled_report_email' => 'getReceiveScheduledReportEmail',
        'profile_url' => 'getProfileUrl',
        'job_position' => 'getJobPosition'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['date_updated'] = isset($data['date_updated']) ? $data['date_updated'] : null;
        $this->container['agency_id'] = isset($data['agency_id']) ? $data['agency_id'] : null;
        $this->container['agent_id'] = isset($data['agent_id']) ? $data['agent_id'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['photo'] = isset($data['photo']) ? $data['photo'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['is_active_profile_page'] = isset($data['is_active_profile_page']) ? $data['is_active_profile_page'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['sale_active'] = isset($data['sale_active']) ? $data['sale_active'] : null;
        $this->container['rental_active'] = isset($data['rental_active']) ? $data['rental_active'] : null;
        $this->container['secondary_email'] = isset($data['secondary_email']) ? $data['secondary_email'] : null;
        $this->container['facebook_url'] = isset($data['facebook_url']) ? $data['facebook_url'] : null;
        $this->container['twitter_url'] = isset($data['twitter_url']) ? $data['twitter_url'] : null;
        $this->container['agent_video'] = isset($data['agent_video']) ? $data['agent_video'] : null;
        $this->container['profile_text'] = isset($data['profile_text']) ? $data['profile_text'] : null;
        $this->container['is_hide_sold_leased_listings'] = isset($data['is_hide_sold_leased_listings']) ? $data['is_hide_sold_leased_listings'] : null;
        $this->container['google_plus_url'] = isset($data['google_plus_url']) ? $data['google_plus_url'] : null;
        $this->container['personal_website_url'] = isset($data['personal_website_url']) ? $data['personal_website_url'] : null;
        $this->container['linked_in_url'] = isset($data['linked_in_url']) ? $data['linked_in_url'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['mug_shot_url'] = isset($data['mug_shot_url']) ? $data['mug_shot_url'] : null;
        $this->container['mug_shot_new'] = isset($data['mug_shot_new']) ? $data['mug_shot_new'] : null;
        $this->container['contact_type_code'] = isset($data['contact_type_code']) ? $data['contact_type_code'] : null;
        $this->container['receives_requests'] = isset($data['receives_requests']) ? $data['receives_requests'] : null;
        $this->container['cre_agent_video_url'] = isset($data['cre_agent_video_url']) ? $data['cre_agent_video_url'] : null;
        $this->container['receive_scheduled_report_email'] = isset($data['receive_scheduled_report_email']) ? $data['receive_scheduled_report_email'] : null;
        $this->container['profile_url'] = isset($data['profile_url']) ? $data['profile_url'] : null;
        $this->container['job_position'] = isset($data['job_position']) ? $data['job_position'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets date_updated
     *
     * @return \DateTime
     */
    public function getDateUpdated()
    {
        return $this->container['date_updated'];
    }

    /**
     * Sets date_updated
     *
     * @param \DateTime $date_updated Gets or Sets DateUpdated
     *
     * @return $this
     */
    public function setDateUpdated($date_updated)
    {
        $this->container['date_updated'] = $date_updated;

        return $this;
    }

    /**
     * Gets agency_id
     *
     * @return int
     */
    public function getAgencyId()
    {
        return $this->container['agency_id'];
    }

    /**
     * Sets agency_id
     *
     * @param int $agency_id Gets or Sets AgencyId
     *
     * @return $this
     */
    public function setAgencyId($agency_id)
    {
        $this->container['agency_id'] = $agency_id;

        return $this;
    }

    /**
     * Gets agent_id
     *
     * @return int
     */
    public function getAgentId()
    {
        return $this->container['agent_id'];
    }

    /**
     * Sets agent_id
     *
     * @param int $agent_id Gets or Sets AgentId
     *
     * @return $this
     */
    public function setAgentId($agent_id)
    {
        $this->container['agent_id'] = $agent_id;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email Gets or Sets Email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name Gets or Sets FirstName
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile Gets or Sets Mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets photo
     *
     * @return string
     */
    public function getPhoto()
    {
        return $this->container['photo'];
    }

    /**
     * Sets photo
     *
     * @param string $photo Gets or Sets Photo
     *
     * @return $this
     */
    public function setPhoto($photo)
    {
        $this->container['photo'] = $photo;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name Gets or Sets LastName
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets is_active_profile_page
     *
     * @return string
     */
    public function getIsActiveProfilePage()
    {
        return $this->container['is_active_profile_page'];
    }

    /**
     * Sets is_active_profile_page
     *
     * @param string $is_active_profile_page Gets or Sets IsActiveProfilePage
     *
     * @return $this
     */
    public function setIsActiveProfilePage($is_active_profile_page)
    {
        $this->container['is_active_profile_page'] = $is_active_profile_page;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone Gets or Sets Phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets sale_active
     *
     * @return bool
     */
    public function getSaleActive()
    {
        return $this->container['sale_active'];
    }

    /**
     * Sets sale_active
     *
     * @param bool $sale_active Gets or Sets SaleActive
     *
     * @return $this
     */
    public function setSaleActive($sale_active)
    {
        $this->container['sale_active'] = $sale_active;

        return $this;
    }

    /**
     * Gets rental_active
     *
     * @return bool
     */
    public function getRentalActive()
    {
        return $this->container['rental_active'];
    }

    /**
     * Sets rental_active
     *
     * @param bool $rental_active Gets or Sets RentalActive
     *
     * @return $this
     */
    public function setRentalActive($rental_active)
    {
        $this->container['rental_active'] = $rental_active;

        return $this;
    }

    /**
     * Gets secondary_email
     *
     * @return string
     */
    public function getSecondaryEmail()
    {
        return $this->container['secondary_email'];
    }

    /**
     * Sets secondary_email
     *
     * @param string $secondary_email Gets or Sets SecondaryEmail
     *
     * @return $this
     */
    public function setSecondaryEmail($secondary_email)
    {
        $this->container['secondary_email'] = $secondary_email;

        return $this;
    }

    /**
     * Gets facebook_url
     *
     * @return string
     */
    public function getFacebookUrl()
    {
        return $this->container['facebook_url'];
    }

    /**
     * Sets facebook_url
     *
     * @param string $facebook_url Gets or Sets FacebookUrl
     *
     * @return $this
     */
    public function setFacebookUrl($facebook_url)
    {
        $this->container['facebook_url'] = $facebook_url;

        return $this;
    }

    /**
     * Gets twitter_url
     *
     * @return string
     */
    public function getTwitterUrl()
    {
        return $this->container['twitter_url'];
    }

    /**
     * Sets twitter_url
     *
     * @param string $twitter_url Gets or Sets TwitterUrl
     *
     * @return $this
     */
    public function setTwitterUrl($twitter_url)
    {
        $this->container['twitter_url'] = $twitter_url;

        return $this;
    }

    /**
     * Gets agent_video
     *
     * @return string
     */
    public function getAgentVideo()
    {
        return $this->container['agent_video'];
    }

    /**
     * Sets agent_video
     *
     * @param string $agent_video Gets or Sets AgentVideo
     *
     * @return $this
     */
    public function setAgentVideo($agent_video)
    {
        $this->container['agent_video'] = $agent_video;

        return $this;
    }

    /**
     * Gets profile_text
     *
     * @return string
     */
    public function getProfileText()
    {
        return $this->container['profile_text'];
    }

    /**
     * Sets profile_text
     *
     * @param string $profile_text Gets or Sets ProfileText
     *
     * @return $this
     */
    public function setProfileText($profile_text)
    {
        $this->container['profile_text'] = $profile_text;

        return $this;
    }

    /**
     * Gets is_hide_sold_leased_listings
     *
     * @return bool
     */
    public function getIsHideSoldLeasedListings()
    {
        return $this->container['is_hide_sold_leased_listings'];
    }

    /**
     * Sets is_hide_sold_leased_listings
     *
     * @param bool $is_hide_sold_leased_listings Gets or Sets IsHideSoldLeasedListings
     *
     * @return $this
     */
    public function setIsHideSoldLeasedListings($is_hide_sold_leased_listings)
    {
        $this->container['is_hide_sold_leased_listings'] = $is_hide_sold_leased_listings;

        return $this;
    }

    /**
     * Gets google_plus_url
     *
     * @return string
     */
    public function getGooglePlusUrl()
    {
        return $this->container['google_plus_url'];
    }

    /**
     * Sets google_plus_url
     *
     * @param string $google_plus_url Gets or Sets GooglePlusUrl
     *
     * @return $this
     */
    public function setGooglePlusUrl($google_plus_url)
    {
        $this->container['google_plus_url'] = $google_plus_url;

        return $this;
    }

    /**
     * Gets personal_website_url
     *
     * @return string
     */
    public function getPersonalWebsiteUrl()
    {
        return $this->container['personal_website_url'];
    }

    /**
     * Sets personal_website_url
     *
     * @param string $personal_website_url Gets or Sets PersonalWebsiteUrl
     *
     * @return $this
     */
    public function setPersonalWebsiteUrl($personal_website_url)
    {
        $this->container['personal_website_url'] = $personal_website_url;

        return $this;
    }

    /**
     * Gets linked_in_url
     *
     * @return string
     */
    public function getLinkedInUrl()
    {
        return $this->container['linked_in_url'];
    }

    /**
     * Sets linked_in_url
     *
     * @param string $linked_in_url Gets or Sets LinkedInUrl
     *
     * @return $this
     */
    public function setLinkedInUrl($linked_in_url)
    {
        $this->container['linked_in_url'] = $linked_in_url;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax Gets or Sets Fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets mug_shot_url
     *
     * @return string
     */
    public function getMugShotUrl()
    {
        return $this->container['mug_shot_url'];
    }

    /**
     * Sets mug_shot_url
     *
     * @param string $mug_shot_url Gets or Sets MugShotURL
     *
     * @return $this
     */
    public function setMugShotUrl($mug_shot_url)
    {
        $this->container['mug_shot_url'] = $mug_shot_url;

        return $this;
    }

    /**
     * Gets mug_shot_new
     *
     * @return string
     */
    public function getMugShotNew()
    {
        return $this->container['mug_shot_new'];
    }

    /**
     * Sets mug_shot_new
     *
     * @param string $mug_shot_new Gets or Sets MugShotNew
     *
     * @return $this
     */
    public function setMugShotNew($mug_shot_new)
    {
        $this->container['mug_shot_new'] = $mug_shot_new;

        return $this;
    }

    /**
     * Gets contact_type_code
     *
     * @return int
     */
    public function getContactTypeCode()
    {
        return $this->container['contact_type_code'];
    }

    /**
     * Sets contact_type_code
     *
     * @param int $contact_type_code Gets or Sets ContactTypeCode
     *
     * @return $this
     */
    public function setContactTypeCode($contact_type_code)
    {
        $this->container['contact_type_code'] = $contact_type_code;

        return $this;
    }

    /**
     * Gets receives_requests
     *
     * @return bool
     */
    public function getReceivesRequests()
    {
        return $this->container['receives_requests'];
    }

    /**
     * Sets receives_requests
     *
     * @param bool $receives_requests Gets or Sets ReceivesRequests
     *
     * @return $this
     */
    public function setReceivesRequests($receives_requests)
    {
        $this->container['receives_requests'] = $receives_requests;

        return $this;
    }

    /**
     * Gets cre_agent_video_url
     *
     * @return string
     */
    public function getCreAgentVideoUrl()
    {
        return $this->container['cre_agent_video_url'];
    }

    /**
     * Sets cre_agent_video_url
     *
     * @param string $cre_agent_video_url Gets or Sets CreAgentVideoURL
     *
     * @return $this
     */
    public function setCreAgentVideoUrl($cre_agent_video_url)
    {
        $this->container['cre_agent_video_url'] = $cre_agent_video_url;

        return $this;
    }

    /**
     * Gets receive_scheduled_report_email
     *
     * @return bool
     */
    public function getReceiveScheduledReportEmail()
    {
        return $this->container['receive_scheduled_report_email'];
    }

    /**
     * Sets receive_scheduled_report_email
     *
     * @param bool $receive_scheduled_report_email Gets or Sets ReceiveScheduledReportEmail
     *
     * @return $this
     */
    public function setReceiveScheduledReportEmail($receive_scheduled_report_email)
    {
        $this->container['receive_scheduled_report_email'] = $receive_scheduled_report_email;

        return $this;
    }

    /**
     * Gets profile_url
     *
     * @return string
     */
    public function getProfileUrl()
    {
        return $this->container['profile_url'];
    }

    /**
     * Sets profile_url
     *
     * @param string $profile_url Gets or Sets ProfileUrl
     *
     * @return $this
     */
    public function setProfileUrl($profile_url)
    {
        $this->container['profile_url'] = $profile_url;

        return $this;
    }

    /**
     * Gets job_position
     *
     * @return string
     */
    public function getJobPosition()
    {
        return $this->container['job_position'];
    }

    /**
     * Sets job_position
     *
     * @param string $job_position Gets or Sets JobPosition
     *
     * @return $this
     */
    public function setJobPosition($job_position)
    {
        $this->container['job_position'] = $job_position;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
